
Name Tenagne Zergaw ACT COLLEGE of Computer SCeince Masters Program ID 064

Question: Assuming a list of relations is given as a list, write a Python and PL SQL class that generates
 HORIZONTAL miniterm fragments from a list of predicates Pr







class MinitermGenerator:
    def __init__(self, predicates):
        self.predicates = predicates

    def generate_miniterms(self):
        miniterms = []
        for predicate in self.predicates:
            miniterms.extend(self._generate_miniterms_for_predicate(predicate))
        return miniterms

    def _generate_miniterms_for_predicate(self, predicate):
        miniterms = []
        split_predicate = predicate.split()
        variables = [split_predicate[i] for i in range(len(split_predicate)) if i % 2 == 0]
        miniterms.append(' '.join(variables))
        for i in range(1, len(split_predicate), 2):
            miniterm = ' '.join(variables[:i])
            if miniterm:
                miniterms.append(miniterm)
        return miniterms

# Example usage:
predicates = ["A = 1 AND B = 2 AND C = 3", "X = 'foo' AND Y = 'bar'"]
miniterm_generator = MinitermGenerator(predicates)
miniterms = miniterm_generator.generate_miniterms()
print(miniterms)